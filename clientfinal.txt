//clientfinal


import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;

public class TheClient implements Runnable {
    private Socket socket;
    private BufferedReader in;
    private PrintWriter out;
    private boolean done;

    @Override
    public void run() {
        try {
            socket = new Socket("127.0.0.1", 9999);
            out = new PrintWriter(socket.getOutputStream(), true);
            in = new BufferedReader(new InputStreamReader(socket.getInputStream()));

            InputHandler inputHandler = new InputHandler();
            Thread t = new Thread(inputHandler);
            t.start();

            String msg;
            while ((msg = in.readLine()) != null) {
                System.out.println(msg);
            }

        } catch (Exception e) {
            shutdown();
        }
    }

    public void shutdown() {
        done = true;
        try {
            if (!socket.isClosed()) {
                in.close();
                out.close();
                socket.close();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    class InputHandler implements Runnable {
        @Override
        public void run() {
            try {
                BufferedReader inReader = new BufferedReader(new InputStreamReader(System.in));
                String msg;
                while (!done && (msg = inReader.readLine()) != null) {
                    if (msg.equals("/quit")) {
                        shutdown();
                    } else {
                        out.println(msg);
                    }
                }
                inReader.close();
            } catch (Exception e) {
                e.printStackTrace();
                shutdown();
            }
        }
    }

    public static void main(String[] args) {
        TheClient client = new TheClient();
        Thread clientThread = new Thread(client);
        clientThread.start();
    }
}
